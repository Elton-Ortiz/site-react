[{"/home/elton/Área de Trabalho/Project/site-react/src/index.js":"1","/home/elton/Área de Trabalho/Project/site-react/src/App.js":"2","/home/elton/Área de Trabalho/Project/site-react/src/reportWebVitals.js":"3","/home/elton/Área de Trabalho/Project/site-react/src/components/header/header.js":"4","/home/elton/Área de Trabalho/Project/site-react/src/components/projects-menu/projects-menu.js":"5","/home/elton/Área de Trabalho/Project/site-react/src/pages/workProgress/workProgress.js":"6","/home/elton/Área de Trabalho/Project/site-react/src/pages/home/home.js":"7","/home/elton/Área de Trabalho/Project/site-react/src/components/textCard/textCard.js":"8","/home/elton/Área de Trabalho/Project/site-react/src/components/page-about/page-about.js":"9"},{"size":585,"mtime":1611687248824,"results":"10","hashOfConfig":"11"},{"size":670,"mtime":1611779387498,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611686527634,"results":"13","hashOfConfig":"11"},{"size":1063,"mtime":1611686931724,"results":"14","hashOfConfig":"11"},{"size":1568,"mtime":1611779387498,"results":"15","hashOfConfig":"11"},{"size":282,"mtime":1611686931804,"results":"16","hashOfConfig":"11"},{"size":651,"mtime":1611686931800,"results":"17","hashOfConfig":"11"},{"size":1597,"mtime":1611686931736,"results":"18","hashOfConfig":"11"},{"size":1316,"mtime":1611779387498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18txja7",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/home/elton/Área de Trabalho/Project/site-react/src/index.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/App.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/reportWebVitals.js",[],["41","42"],"/home/elton/Área de Trabalho/Project/site-react/src/components/header/header.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/components/projects-menu/projects-menu.js",["43"],"import { useState } from 'react';\nimport './projects-menu.css';\n\n\nfunction ProjectsMenu() {\n\n    const [display, setDisplay] = useState(\"block\");\n    const [clicked, setClicked] = useState(\"clicked\")\n\n    function toggle(){\n      if(display === \"block\"){\n          setDisplay(\"none\")\n          setClicked(\" \")\n        }else{\n            setClicked(\"clicked\");\n            setTimeout(()=>{\n                setDisplay(\"block\")\n            },500)\n      }\n    }\n\n/*this function is only for homepage*/\n    function started(){\n        setTimeout(()=>{\n            toggle()\n        },1500)\n    }\n    window.onload =  started;\n/***********************************/\n\n    return (\n        <div className={\"proj-cont \" + clicked}  onClick={()=>{toggle()}} >\n             <div style={{display:display}} >\n        <h1>Projects</h1>\n        <nav>\n            <ul>\n                <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://siteform.netlify.app/\">Form</a></li>\n                <li><a href=\"https://eltonortizmyworks.netlify.app/\">reactjs.org copy\n            <p>Trabalhando atualmente</p>\n                </a>\n                </li>\n                <li><a target=\"_blank\" rel=\"noreferrer\" href=\"https://siteform.netlify.app/\">angular.io copy\n            <p>Próximo projeto</p>\n                </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n        </div>\n    )\n}\n\nexport default ProjectsMenu;","/home/elton/Área de Trabalho/Project/site-react/src/pages/workProgress/workProgress.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/pages/home/home.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/components/textCard/textCard.js",[],"/home/elton/Área de Trabalho/Project/site-react/src/components/page-about/page-about.js",["44"],"import { useState } from 'react';\nimport './page-about.css';\n\n\nfunction PageAbout() {\n\n    const [display, setDisplay] = useState(\"none\");\n    const [clicked, setClicked] = useState(\" \")\n\n    function toggle(){\n      if(display === \"block\"){\n          setDisplay(\"none\")\n          setClicked(\" \")\n        }else{\n            setClicked(\"clicked\");\n            setTimeout(()=>{\n                setDisplay(\"block\")\n            },850)\n      }\n    }\n\n    return (\n        <div className={\"about \" + clicked}  onClick={()=>{toggle()}} >\n             <div style={{display:display}} >\n                 <span className=\"close\"  >\n                     <a  href=\"#\"\n                     onClick={()=>{toggle()}}\n                     >X</a></span>\n        <h1>About</h1>\n        <main>\n        <p>Esta página foi feita com o intuito, de ser uma cópia da página <a href=\"https://pt-br.reactjs.org/\">reactjs.org</a> ela ainda está em construção!</p>\n        <h2>Tecnologia usadas</h2>\n        <ul>\n            <li>HTML</li>\n            <li>CSS</li>\n            <li>Javascript</li>\n            <li>React</li>\n            <li>Git</li>\n\n        </ul>\n        <a className=\"repository\" href=\"https://github.com/Elton-Ortiz/site-react\">Repositório</a>\n        </main>\n    </div>\n        </div>\n    )\n}\n\nexport default PageAbout;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":35,"column":22,"nodeType":"51","endLine":37,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":26,"column":22,"nodeType":"51","endLine":28,"endColumn":23},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]